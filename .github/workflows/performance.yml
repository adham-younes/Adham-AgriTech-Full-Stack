name: Performance Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 3 * * 0' # Run every Sunday at 3 AM

jobs:
  performance-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Start application
      run: npm run start &
      env:
        PORT: 3003
        
    - name: Wait for application to start
      run: sleep 30
      
    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        configPath: './lighthouse.config.js'
        uploadArtifacts: true
        temporaryPublicStorage: true
        
    - name: Run WebPageTest
      uses: treosh/webpagetest-action@v1
      with:
        apiKey: ${{ secrets.WEBPAGETEST_API_KEY }}
        url: 'http://localhost:3003'
        location: 'Dulles:Chrome'
        runs: 3
        timeout: 300
      continue-on-error: true
      
    - name: Comment PR with performance results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Read Lighthouse results
          const lighthouseResults = fs.readFileSync('lighthouse-results.json', 'utf8');
          const results = JSON.parse(lighthouseResults);
          
          // Create comment
          const comment = `## ðŸ“Š Performance Test Results
          
          ### Lighthouse Scores
          - **Performance:** ${results.lhr.categories.performance.score * 100}
          - **Accessibility:** ${results.lhr.categories.accessibility.score * 100}
          - **Best Practices:** ${results.lhr.categories['best-practices'].score * 100}
          - **SEO:** ${results.lhr.categories.seo.score * 100}
          
          ### Key Metrics
          - **First Contentful Paint:** ${results.lhr.audits['first-contentful-paint'].displayValue}
          - **Largest Contentful Paint:** ${results.lhr.audits['largest-contentful-paint'].displayValue}
          - **Cumulative Layout Shift:** ${results.lhr.audits['cumulative-layout-shift'].displayValue}
          - **Total Blocking Time:** ${results.lhr.audits['total-blocking-time'].displayValue}
          
          ### Recommendations
          ${results.lhr.categories.performance.auditRefs
            .filter(audit => audit.result.score < 0.9)
            .map(audit => `- ${audit.result.title}`)
            .join('\n')}
          `;
          
          // Post comment
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
      continue-on-error: true